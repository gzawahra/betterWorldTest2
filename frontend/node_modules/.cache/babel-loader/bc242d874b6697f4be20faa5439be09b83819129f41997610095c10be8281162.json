{"ast":null,"code":"import '../../style/SpringSpinner.css';\nimport { utils } from '../services/utils.js';\nimport { openBlock, createElementBlock, normalizeStyle, createElementVNode } from 'vue';\nimport { _export_sfc } from '../plugin-vue_export-helper.js';\nvar SpringSpinner_vue_vue_type_style_index_0_lang = '';\nconst _sfc_main = {\n  name: 'SpringSpinner',\n  props: {\n    animationDuration: {\n      type: Number,\n      default: 3000\n    },\n    size: {\n      type: Number,\n      default: 70\n    },\n    color: {\n      type: String,\n      default: '#fff'\n    }\n  },\n  data() {\n    return {\n      animationName: `spring-spinner-animation-${Date.now()}`\n    };\n  },\n  computed: {\n    spinnerStyle() {\n      return {\n        height: `${this.size}px`,\n        width: `${this.size}px`\n      };\n    },\n    spinnerPartStyle() {\n      return {\n        height: `${this.size / 2}px`,\n        width: `${this.size}px`\n      };\n    },\n    rotatorStyle() {\n      return {\n        height: `${this.size}px`,\n        width: `${this.size}px`,\n        borderRightColor: this.color,\n        borderTopColor: this.color,\n        borderWidth: `${this.size / 7}px`,\n        animationDuration: `${this.animationDuration}ms`,\n        animationName: this.animationName\n      };\n    }\n  },\n  watch: {\n    size: {\n      handler: 'updateAnimation',\n      immediate: true\n    },\n    color: {\n      handler: 'updateAnimation',\n      immediate: true\n    }\n  },\n  mounted() {\n    this.updateAnimation();\n  },\n  beforeUnmount() {\n    utils.removeKeyframes(this.animationName);\n  },\n  methods: {\n    updateAnimation() {\n      utils.removeKeyframes(this.animationName);\n      utils.appendKeyframes(this.animationName, this.generateKeyframes());\n    },\n    generateKeyframes() {\n      return `\n        0% {\n          border-width: ${this.size / 7}px;\n        }\n        25% {\n          border-width: ${this.size / 23.33}px;\n        }\n        50% {\n          transform: rotate(115deg);\n          border-width: ${this.size / 7}px;\n        }\n        75% {\n          border-width: ${this.size / 23.33}px;\n          }\n        100% {\n          border-width: ${this.size / 7}px;\n        }`;\n    }\n  }\n};\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", {\n    class: \"spring-spinner\",\n    style: normalizeStyle($options.spinnerStyle)\n  }, [createElementVNode(\"div\", {\n    class: \"spring-spinner-part top\",\n    style: normalizeStyle($options.spinnerPartStyle)\n  }, [createElementVNode(\"div\", {\n    class: \"spring-spinner-rotator\",\n    style: normalizeStyle($options.rotatorStyle)\n  }, null, 4)], 4), createElementVNode(\"div\", {\n    class: \"spring-spinner-part bottom\",\n    style: normalizeStyle($options.spinnerPartStyle)\n  }, [createElementVNode(\"div\", {\n    class: \"spring-spinner-rotator\",\n    style: normalizeStyle($options.rotatorStyle)\n  }, null, 4)], 4)], 4);\n}\nvar SpringSpinner = /*#__PURE__*/_export_sfc(_sfc_main, [['render', _sfc_render]]);\nexport { SpringSpinner };","map":{"version":3,"names":["utils","openBlock","createElementBlock","normalizeStyle","createElementVNode","_export_sfc","SpringSpinner_vue_vue_type_style_index_0_lang","_sfc_main","name","props","animationDuration","type","Number","default","size","color","String","data","animationName","Date","now","computed","spinnerStyle","height","width","spinnerPartStyle","rotatorStyle","borderRightColor","borderTopColor","borderWidth","watch","handler","immediate","mounted","updateAnimation","beforeUnmount","removeKeyframes","methods","appendKeyframes","generateKeyframes","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","class","style","SpringSpinner"],"sources":["/home/gz/Desktop/betterWorldTest2/frontend/node_modules/epic-spinners/dist/es/components/SpringSpinner.js"],"sourcesContent":["import '../../style/SpringSpinner.css';\nimport { utils } from '../services/utils.js';\nimport { openBlock, createElementBlock, normalizeStyle, createElementVNode } from 'vue';\nimport { _export_sfc } from '../plugin-vue_export-helper.js';\n\nvar SpringSpinner_vue_vue_type_style_index_0_lang = '';\n\nconst _sfc_main = {\n  name: 'SpringSpinner',\n\n  props: {\n    animationDuration: {\n      type: Number,\n      default: 3000,\n    },\n    size: {\n      type: Number,\n      default: 70,\n    },\n    color: {\n      type: String,\n      default: '#fff',\n    },\n  },\n\n  data() {\n    return {\n      animationName: `spring-spinner-animation-${Date.now()}`,\n    }\n  },\n\n  computed: {\n    spinnerStyle() {\n      return {\n        height: `${this.size}px`,\n        width: `${this.size}px`,\n      }\n    },\n\n    spinnerPartStyle() {\n      return {\n        height: `${this.size / 2}px`,\n        width: `${this.size}px`,\n      }\n    },\n\n    rotatorStyle() {\n      return {\n        height: `${this.size}px`,\n        width: `${this.size}px`,\n        borderRightColor: this.color,\n        borderTopColor: this.color,\n        borderWidth: `${this.size / 7}px`,\n        animationDuration: `${this.animationDuration}ms`,\n        animationName: this.animationName,\n      }\n    },\n  },\n\n  watch: {\n    size: {\n      handler: 'updateAnimation',\n      immediate: true,\n    },\n    color: {\n      handler: 'updateAnimation',\n      immediate: true,\n    },\n  },\n\n  mounted() {\n    this.updateAnimation();\n  },\n\n  beforeUnmount() {\n    utils.removeKeyframes(this.animationName);\n  },\n\n  methods: {\n    updateAnimation() {\n      utils.removeKeyframes(this.animationName);\n      utils.appendKeyframes(this.animationName, this.generateKeyframes());\n    },\n\n    generateKeyframes() {\n      return `\n        0% {\n          border-width: ${this.size / 7}px;\n        }\n        25% {\n          border-width: ${this.size / 23.33}px;\n        }\n        50% {\n          transform: rotate(115deg);\n          border-width: ${this.size / 7}px;\n        }\n        75% {\n          border-width: ${this.size / 23.33}px;\n          }\n        100% {\n          border-width: ${this.size / 7}px;\n        }`\n    },\n  },\n};\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (openBlock(), createElementBlock(\"div\", {\n    class: \"spring-spinner\",\n    style: normalizeStyle($options.spinnerStyle)\n  }, [\n    createElementVNode(\"div\", {\n      class: \"spring-spinner-part top\",\n      style: normalizeStyle($options.spinnerPartStyle)\n    }, [\n      createElementVNode(\"div\", {\n        class: \"spring-spinner-rotator\",\n        style: normalizeStyle($options.rotatorStyle)\n      }, null, 4)\n    ], 4),\n    createElementVNode(\"div\", {\n      class: \"spring-spinner-part bottom\",\n      style: normalizeStyle($options.spinnerPartStyle)\n    }, [\n      createElementVNode(\"div\", {\n        class: \"spring-spinner-rotator\",\n        style: normalizeStyle($options.rotatorStyle)\n      }, null, 4)\n    ], 4)\n  ], 4))\n}\nvar SpringSpinner = /*#__PURE__*/_export_sfc(_sfc_main, [['render',_sfc_render]]);\n\nexport { SpringSpinner };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}