[{"/home/gz/Desktop/betterWorldTest2/frontend/src/main.ts":"1","/home/gz/Desktop/betterWorldTest2/frontend/src/plugins/webfontloader.ts":"2","/home/gz/Desktop/betterWorldTest2/frontend/src/plugins/vuetify.ts":"3","/home/gz/Desktop/betterWorldTest2/frontend/src/App.vue":"4","/home/gz/Desktop/betterWorldTest2/frontend/src/router/index.ts":"5","/home/gz/Desktop/betterWorldTest2/frontend/src/store/index.ts":"6","/home/gz/Desktop/betterWorldTest2/frontend/src/views/HomeView.vue":"7","/home/gz/Desktop/betterWorldTest2/frontend/src/views/AboutView.vue":"8"},{"size":360,"mtime":1678905028764,"results":"9","hashOfConfig":"10"},{"size":358,"mtime":1678899268963,"results":"11","hashOfConfig":"10"},{"size":237,"mtime":1678899261312,"results":"12","hashOfConfig":"10"},{"size":257,"mtime":1678899268963,"results":"13","hashOfConfig":"10"},{"size":509,"mtime":1678899152577,"results":"14","hashOfConfig":"10"},{"size":343,"mtime":1678903499746,"results":"15","hashOfConfig":"10"},{"size":2458,"mtime":1678904903178,"results":"16","hashOfConfig":"10"},{"size":89,"mtime":1678729119928,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1qbpbfe",{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/home/gz/Desktop/betterWorldTest2/frontend/src/main.ts",["37","38"],"/home/gz/Desktop/betterWorldTest2/frontend/src/plugins/webfontloader.ts",[],[],"/home/gz/Desktop/betterWorldTest2/frontend/src/plugins/vuetify.ts",[],"/home/gz/Desktop/betterWorldTest2/frontend/src/App.vue",[],[],"/home/gz/Desktop/betterWorldTest2/frontend/src/router/index.ts",["39","40","41"],"/* eslint-disable camelcase */\nimport Vue from 'vue'\nimport axios from 'axios'\nimport store from '@/store'\nimport { createRouter, createWebHistory, RouteRecordRaw } from 'vue-router'\n\nfunction lazyLoad (view: string) {\n  return () => import(`../views/${view}.vue`)\n}\n\nconst routes: Array< RouteRecordRaw> = [\n  {\n    path: '/',\n    name: 'HomeView',\n    component: lazyLoad('HomeView')\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\nexport default router\n","/home/gz/Desktop/betterWorldTest2/frontend/src/store/index.ts",[],"/home/gz/Desktop/betterWorldTest2/frontend/src/views/HomeView.vue",["42","43","44"],"/home/gz/Desktop/betterWorldTest2/frontend/src/views/AboutView.vue",[],{"ruleId":"45","severity":1,"message":"46","line":7,"column":8,"nodeType":"47","messageId":"48","endLine":7,"endColumn":13},{"ruleId":"45","severity":1,"message":"49","line":8,"column":8,"nodeType":"47","messageId":"48","endLine":8,"endColumn":16},{"ruleId":"45","severity":1,"message":"50","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":11},{"ruleId":"45","severity":1,"message":"46","line":3,"column":8,"nodeType":"47","messageId":"48","endLine":3,"endColumn":13},{"ruleId":"45","severity":1,"message":"51","line":4,"column":8,"nodeType":"47","messageId":"48","endLine":4,"endColumn":13},{"ruleId":"45","severity":1,"message":"52","line":41,"column":10,"nodeType":"47","messageId":"48","endLine":41,"endColumn":22},{"ruleId":"45","severity":1,"message":"53","line":44,"column":10,"nodeType":"47","messageId":"48","endLine":44,"endColumn":23},{"ruleId":"54","severity":1,"message":"55","line":59,"column":58,"nodeType":"56","messageId":"57","endLine":59,"endColumn":61,"suggestions":"58"},"@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'VueAxios' is defined but never used.","'Vue' is defined but never used.","'store' is defined but never used.","'OrbitSpinner' is defined but never used.","'AxiosResponse' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["59","60"],{"messageId":"61","fix":"62","desc":"63"},{"messageId":"64","fix":"65","desc":"66"},"suggestUnknown",{"range":"67","text":"68"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"67","text":"69"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[1817,1820],"unknown","never"]